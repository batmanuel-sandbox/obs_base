needCalibRegistry: true

levels:
  visit: ccd

defaultLevel: ccd

defaultSubLevels:
  visit: ccd

camera: camera

exposures:
  raw:
    level: Ccd
    persistable: ImageU
    python: lsst.afw.image.ExposureU
    tables: raw
    template: foo-%(ccd)02d.fits

calibrations:
  flat:
    columns:
    - filter
    - taiObs
    level: Amp
    persistable: ExposureF
    python: lsst.afw.image.ExposureF
    refCols:
    - ccd
    - visit
    reference: raw
    tables: flat
    template: flat-%(derivedRunId)s-f%(filter)s.fits
    validRange: true

datasets:
  forced_src:
    persistable: SourceCatalog
    python: lsst.afw.table.SourceCatalog
    storage: FitsCatalogStorage
    tables: raw
    template: '%(tract)d/%(filter)s/forced_src-v%(visit)d-c%(ccd)02d.boost'
  someCatalog:
    persistable: BasesCatalog
    python: lsst.afw.table.BaseCatalog
    storage: FitsCatalogStorage
    tables: raw
    template: catalog-v%(visit)d-c%(ccd)02d.fits

calibRegistryPath: tests/calibRegistry.sqlite3
images:
  other:
    persistable: ImageF
    python: lsst.afw.image.ImageF
    tables: raw
    template: bar-%(ccd)02d.fits[%(hdu)d]
  some:
    persistable: ExposureF
    python: lsst.afw.image.ExposureF
    tables: raw
    template: bar-%(ccd)02d.fits
  someFz:
    persistable: ExposureF
    python: lsst.afw.image.ExposureF
    tables: raw
    template: fz/bar-%(ccd)02d.fits
  someGz:
    persistable: ExposureF
    python: lsst.afw.image.ExposureF
    tables: raw
    template: gz/bar-%(ccd)02d.fits
